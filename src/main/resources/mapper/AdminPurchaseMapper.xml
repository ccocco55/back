<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.youeatieat.mapper.AdminPurchaseMapper">
    <select id="selectPurchaseAll">
        select pr.id, pr.purchase_request_product_name, pr.purchase_request_description, pr.purchase_request_category, pr.purchase_request_quantity_kg, pr.purchase_request_proposed_price_per_kg, pr.purchase_request_country_of_origin, pr.purchase_request_date_of_manufacture, pr.purchase_request_detail_img, pr.purchase_request_approval_status, pr.purchase_request_status, pr.member_id, pr.created_date, pr.updated_date,
               m.member_name
        from tbl_purchase_request pr
            join tbl_member m
                on m.id = pr.member_id
        where m.member_status = 'active' and m.member_role = 'seller'
        order by m.id desc
        limit #{count} offset #{offset}
    </select>

    <select id="selectPurchaseCountAll">
        select count(*)
        from tbl_purchase_request pr
             join tbl_member m
                  on m.id = pr.member_id
        where m.member_status = 'active' and m.member_role = 'seller'
    </select>

    <select id="selectInquiryDetail">
        select i.id, i.inquiry_category, i.inquiry_title, i.inquiry_content, i.inquiry_image, i.member_id, i.created_date as inquiryCreatedDate, i.updated_date as inquiryUpdatedDate,
               m.member_name, ia.inquiry_id, ia.inquiry_answer_content, ia.created_date as answerCreatedDate, ia.updated_date as answerUpdatedDate
        from tbl_inquiry i
             left join tbl_inquiry_answer ia
                       on ia.inquiry_id = i.id
             join tbl_member m
                  on m.id = i.member_id
        where i.id = #{inquiryId}
    </select>

<!--    <update id="updateInquiryAnswer">-->
<!--        update tbl_inquiry_answer-->
<!--        set inquiry_answer_content = #{answerContent},-->
<!--            updated_date = NOW()-->
<!--        where inquiry_id = #{inquiryId}-->
<!--    </update>-->

    <insert id="insertInquiryAnswer">
        insert into tbl_inquiry_answer (inquiry_id, inquiry_answer_content)
        values (#{inquiryId}, #{inquiryAnswerContent})
    </insert>

    <select id="selectUnansweredAll">
        select i.id, i.inquiry_category, i.inquiry_title, i.inquiry_content, i.inquiry_image, i.member_id, i.created_date as inquiryCreatedDate, i.updated_date as inquiryUpdatedDate,
               m.member_name, ia.inquiry_id, ia.inquiry_answer_content, ia.created_date as answerCreatedDate, ia.updated_date as answerUpdatedDate
        from tbl_inquiry i
             left join tbl_inquiry_answer ia
                       on ia.inquiry_id = i.id
             join tbl_member m
                  on m.id = i.member_id
        where m.member_status = 'active' and m.member_role = 'seller'
            and ia.inquiry_answer_content is null
        order by i.id desc
        limit #{count} offset #{offset}
    </select>

    <select id="selectUnansweredCountAll">
        select count(*)
        from tbl_inquiry i
             left join tbl_inquiry_answer ia
                   on ia.inquiry_id = i.id
             join tbl_member m
                  on m.id = i.member_id
        where m.member_status = 'active' and m.member_role = 'seller'
            and ia.inquiry_answer_content is null
    </select>

    <select id="selectAnsweredAll">
        select i.id, i.inquiry_category, i.inquiry_title, i.inquiry_content, i.inquiry_image, i.member_id, i.created_date as inquiryCreatedDate, i.updated_date as inquiryUpdatedDate,
               m.member_name, ia.inquiry_id, ia.inquiry_answer_content, ia.created_date as answerCreatedDate, ia.updated_date as answerUpdatedDate
        from tbl_inquiry i
                 left join tbl_inquiry_answer ia
                           on ia.inquiry_id = i.id
                 join tbl_member m
                      on m.id = i.member_id
        where m.member_status = 'active' and m.member_role = 'seller'
            and ia.inquiry_answer_content is not null
        order by i.id desc
        limit #{count} offset #{offset}
    </select>

    <select id="selectAnsweredCountAll">
        select count(*)
        from tbl_inquiry i
             left join tbl_inquiry_answer ia
                   on ia.inquiry_id = i.id
             join tbl_member m
                  on m.id = i.member_id
        where m.member_status = 'active' and m.member_role = 'seller'
          and ia.inquiry_answer_content is not null
    </select>
</mapper>